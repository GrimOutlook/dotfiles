import praw
from settings import client_id, client_secret, username, password, user_agent
reddit = praw.Reddit(
                        client_id = client_id,
                        client_secret = client_secret,
                        username = username,
                        password = password,
                        user_agent = user_agent
                    )


subreddit_list = ["the_donald","conspiracy","all"]
for sub in subreddit_list:
    subreddit = reddit.subreddit(sub)
    posts = subreddit.top(limit=None)
    for post in posts:
        submission = reddit.submission(id=post)
        submission.comments.replace_more(limit=None)
        for comment in submission.comments.list():
            writeCommentAuthorToUIDFile( comment )
            # authors_comments = comment.author.comments.new(limit=None)
            # for author_comment in authors_comments:
            #     writeCommentToFile( author_comment )

def writeCommentAuthorToUsernameFile( comment ):
    username_file_filepath = "/home/dom/Code/redditproj/rel_net_scanner/data/username_file.txt"
    with open(username_file_filepath, "a+") as f:
        f.write( str( comment.author ) + "\n")

# def writeCommentToFile( comment ):
#     user_file_filepath = "/home/dom/Code/redditproj/rel_net_scanner/data/users/username_file.txt"
#     with open(username_file_filepath, "a+") as f:
#         f.write( str( comment.author ) + "\n")

class Comment:
    def __init__(self):
        pass

class Subreddit:
    def __init__(self, sub):
        self.subreddit = reddit.subreddit(sub)

    def getSubmission( self, in_post ):
        self.submission = Submission( in_post )

    def getSubmissionList(self, rank, limit):
        if( rank = "h" ):
            self.submission_list = self.subreddit.hot( limit = limit )
        elif( rank = "t" ):
            self.submission_list = self.subreddit.top( limit = limit )
        elif( rank = "n" ):
            self.submission_list = self.subreddit.new( limit = limit )
        else:
            raise Exception("Unknown Subreddit Rank Given")

    def scanAllSubmissionInSubreddit( self ):
        if( not hasattr( self, "post_list" ) ): self.getSubmissionList( "n", None )
        for post in self.submission_list:
            self.getSubmission( post )


class Submission:
    def __init__(self, post):
        self.submission = reddit.submission( id = post )

    def getAllComments( self ):
        pas

class User:
    def __init__(self):
        pass
