#ifndef OPTIONS_H
#define OPTIONS_H

#include <Constants.h>
#include <Input.h>
#include <Display.h>

void changeDimensions()
{
    char preset_change_height_prompt[] = "1.) 5\r\n2.) 10\r\n3.) 15\r\n4.) 20\r\n5.) 25\r\n6.) 30\r\n7.) 40\r\n8.) 50 - MAX\r\n0.) Back\r\nChoice: \0";
    do
    {
        np();
        outputPrompt( preset_change_height_prompt );

        char chosen_option;
        recieveChar( &chosen_option );
    }
    while( chosen_option < '0' && chosen_option > '9' );

    if( chose_option => '0' && chosen_option < '9')
    {
        switch( chosen_option )
        {
            case '1': display->height = 5;
                      break;
            case '2': display->height = 10;
                      break;
            case '3': display->height = 15;
                      break;
            case '4': display->height = 20;
                      break;
            case '5': display->height = 25;
                      break;
            case '6': display->height = 30;
                      break;
            case '7': display->height = 40;
                      break;
            case '8': display->height = 50;
        }
        return;
    }
    
    // Custom Number
    int char_limit = 2; // Number of chars allowed for imput to height and width, 
                        // since 50 is the highest number allowed 2 is all we need
    char change_height_prompt[] = "New height (Current is __, Max Size is __): \0"; // 23-24, 39-40 to replace
    
    char current_height[ char_limit ];
    intToChar( display.height, &current_height, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_height_prompt[i+23] = current_height[i];
    }
    char max_size[ char_limit ];
    intToChar( MAX_SIZE, &max_size, char_limit );

    for( i = 0; i < char_limit; i++ )
    {
        change_height_prompt[i+39] = max_size[i];
    }
    
    do
    {
        outputPrompt( change_height_prompt );
        
        char new_height_char[char_limit];
        recieveCharArray( &new_height_char, char_limit );

        int new_height_int;
        charToInt( new_height_char, &new_height_int );

        if( new_height_int > MAX_SIZE )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_height_int <= MAX_SIZE );

    display.height = new_height_int;

    char preset_change_width_prompt[] = "1.) 5\r\n2.) 10\r\n3.) 15\r\n4.) 20\r\n5.) 25\r\n6.) 30\r\n7.) 40\r\n8.) 50 - MAX\r\n0.) Back\r\nChoice: \0";
    do
    {
        np();
        outputPrompt( preset_change_width_prompt );

        char chosen_option;
        recieveChar( &chosen_option );
    }
    while( chosen_option < '0' && chosen_option > '9' );

    if( chose_option => '0' && chosen_option < '9')
    {
        switch( chosen_option )
        {
            case '1': display->width = 5;
                      break;
            case '2': display->width = 10;
                      break;
            case '3': display->width = 15;
                      break;
            case '4': display->width = 20;
                      break;
            case '5': display->width = 25;
                      break;
            case '6': display->width = 30;
                      break;
            case '7': display->width = 40;
                      break;
            case '8': display->width = 50;
        }
        return;
    }
    
    // Custom Number

    char change_width_prompt[] = "New width (Current is __, Max Size is __): \0"; // 22-23, 38-39 to replace
    
    char current_width[ char_limit ];
    intToChar( display.width, &current_widtht, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_width_prompt[i+22] = current_width[i];
    }

    for( i = 0; i < char_limit; i++ )
    {
        change_width_prompt[i+38] = max_size[i];
    }
    
    do
    {
        outputPrompt( change_width_prompt );
        
        char new_width_char[char_limit];
        recieveCharArray( &new_width_char, char_limit );

        int new_width_int;
        charToInt( new_width_char, &new_width_int );

        if( new_width_int > MAX_SIZE )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_width_int <= MAX_SIZE );

    display.width = new_width_int;
}

void changeUpdateSpeed()
{
    int char_limit = 2; // Number of chars allowed for imput to update speed, only allowed up to 99;
    char change_update_speed_prompt[] = "New update speed (Current is __, Max Size is 63): \0"; // 29-30 to replace
    
    char current_update_speed[ char_limit ];
    intToChar( display.update_speed, &current_update_speed, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_update_speed_prompt[i+29] = current_update_speed[i];
    }
    
    do
    {
        outputPrompt( change_update_speed_prompt );
        
        char new_update_speed_char[char_limit];
        recieveCharArray( &new_update_speed_char, char_limit );

        int new_update_speed_int;
        charToInt( new_update_speed_char, &new_update_int );

        if( new_update_speed_int > MAX_SPEED )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_update_speed_int <= MAX_SPEED );

    display.update_speed = new_height_int;


}

void toggleBadBlocks()
{
    return;
}

void changeModeOfControl()
{
    return;
}

void changeChars()
{
    char mu = 230;
    char pi = 227;
    char tau = 231;
    char phi = 232;
    char theta = 233;
    char omega = 234;
    char degree_symbol= 248;
    char infinity_symbol = 236;
    char loose_square = 176;
    char mild_square = 177;
    char dense_square = 178;
    char solid_square = 254;
    char solid_vertical_rectangle = 219;
    // Pick which block to change
    
    

    // Choose from presets or choose custom
    
    // Char code or key press?
    return;
}

#endif
