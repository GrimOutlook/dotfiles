#ifndef OPTIONS_H
#define OPTIONS_H

#include <Constants.h>
#include <Input.h>
#include <Display.h>

void changeDimensions()
{
    int char_limit = 2; // Number of chars allowed for imput to height and width, 
                        // since 50 is the highest number allowed 2 is all we need
    char change_height_prompt[] = "New height (Current is __, Max Size is __): \0"; // 23-24, 39-40 to replace
    
    char current_height[ char_limit ];
    intToChar( display.height, &current_height, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_height_prompt[i+23] = current_height[i];
    }
    char max_size[ char_limit ];
    intToChar( MAX_SIZE, &max_size, char_limit );

    for( i = 0; i < char_limit; i++ )
    {
        change_height_prompt[i+39] = max_size[i];
    }
    
    do
    {
        outputPrompt( change_height_prompt );
        
        char new_height_char[char_limit];
        recieveCharArray( &new_height_char, char_limit );

        int new_height_int;
        charToInt( new_height_char, &new_height_int );

        if( new_height_int > MAX_SIZE )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_height_int <= MAX_SIZE );

    display.height = new_height_int;

    char change_width_prompt[] = "New width (Current is __, Max Size is __): \0"; // 22-23, 38-39 to replace
    
    char current_width[ char_limit ];
    intToChar( display.width, &current_widtht, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_width_prompt[i+22] = current_width[i];
    }

    for( i = 0; i < char_limit; i++ )
    {
        change_width_prompt[i+38] = max_size[i];
    }
    
    do
    {
        outputPrompt( change_width_prompt );
        
        char new_width_char[char_limit];
        recieveCharArray( &new_width_char, char_limit );

        int new_width_int;
        charToInt( new_width_char, &new_width_int );

        if( new_width_int > MAX_SIZE )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_width_int <= MAX_SIZE );

    display.width = new_width_int;
}

void changeUpdateSpeed()
{
    int char_limit = 2; // Number of chars allowed for imput to update speed, only allowed up to 99;
    char change_update_speed_prompt[] = "New update speed (Current is __, Max Size is 63): \0"; // 29-30 to replace
    
    char current_update_speed[ char_limit ];
    intToChar( display.update_speed, &current_update_speed, char_limit );
    
    for( i = 0; i < char_limit; i++ )
    {
        change_update_speed_prompt[i+29] = current_update_speed[i];
    }
    
    do
    {
        outputPrompt( change_update_speed_prompt );
        
        char new_update_speed_char[char_limit];
        recieveCharArray( &new_update_speed_char, char_limit );

        int new_update_speed_int;
        charToInt( new_update_speed_char, &new_update_int );

        if( new_update_speed_int > MAX_SPEED )
        {
            nl();
            outputPrompt("Input is not less than MAX_SIZE. Please try again.\0");
            nl();
            nl();
        }
    
    }while( new_update_speed_int <= MAX_SPEED );

    display.update_speed = new_height_int;


}

void toggleBadBlocks()
{
    return;
}

void changeModeOfControl()
{
    return;
}

void changeChars()
{
    // Change snake body block, wall block, food block, bad block
    return;
}

#endif
