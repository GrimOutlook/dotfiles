#!/usr/bin/env bash

function any-author-check() {
    config_file="$1"
    user_section="$(user-section "$config_file")"
    test $? || return 1

    echo "$user_section" | rg 'name' &>/dev/null && {
	    err "Name field is set in $config_file"
	    return 0
    }
    echo "$user_section" | rg 'email' &>/dev/null && {
	err "Email field is set in $config_file"
	    return 0
    }
    return 1
}

function all-author-check() {
    config_file="$1"
    user_section="$(user-section $config_file)"
    test $? || return 1

    echo "$user_section" | rg 'name' &>/dev/null && \
    echo "$user_section" | rg 'email' &>/dev/null || {
	    err "Not all fields for author information is set in $config_file"
	    return 1
    }
}

function user-section() {
    config_file="$1"
    if ! test -f "$config_file"; then
        return 1
    fi
    rg -PU '\[user\](?s).*?((?=\[)|.*$)' $config_file
}

function check-args-for-global() {
    echo "$@" | rg -- '--global' &>/dev/null && \
    echo "$@" | rg 'user\.(name|email)' &>/dev/null && return 1
    return 0
}


GIT="$(which git)"
if [ ! $? ]; then
    err "git is not installed."
    exit 1
fi

in-git || {
    err "Not in git repo."
    exit 1
}

# Changing the config is the only thing allowed when the system or global
# gitconfig contain any author information or if the local gitconfig don't
# contain any author information.
if [[ $(echo "$@" | rg "^config") ]]; then
    $GIT "$@"
    exit $?
fi

# Check that author information is not set in the global or system's git
# config.
any-author-check "/etc/gitconfig" && {
    err "System gitconfig contains author information."
    exit 1
}
any-author-check "$HOME/.gitconfig" && {
    err "Global gitconfig contains author information."
    exit 1
}

# Check that author information is set in the repo we're trying to run in.
all-author-check "$(git-root)/.git/config" || {
    err "Local gitconfig doesn't contain author information."
    exit 1
}

# Check if the arguments passed in try to set the global or system config's
# author information.
check-args-for-global "$@" || exit 1

$GIT "$@"
